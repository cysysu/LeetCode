题目:输入两个单调递增的链表，输出两个链表合成后的链表，当然我们需要合成后的链表满足单调不减规则。

/*
struct ListNode {
    int val;
    struct ListNode *next;
    ListNode(int x) :
            val(x), next(NULL) {
    }
};*/
class Solution {
public:
    ListNode* Merge(ListNode* pHead1, ListNode* pHead2)
    {
        ListNode *newhead=NULL,*head=NULL;//p1与tmp1相邻
        if (pHead1 == NULL&&pHead2!=NULL)return pHead2;
        else if (pHead2 == NULL&&pHead1!=NULL)return pHead1;
        else if (pHead1 == NULL&&pHead2 == NULL)return 0;
        else{   //两者均不为空
            while (pHead1!=NULL&&pHead2!=NULL){
                if (pHead1->val >= pHead2->val){
                    if (newhead == NULL){ newhead = pHead2; head = newhead; }
                    else {
                        newhead->next = pHead2;
                        newhead = newhead->next;
                    }
                    pHead2 = pHead2->next;
 
                }
                else {
                    if (newhead == NULL){ newhead = pHead1; head = newhead; }
                    else {
                        newhead->next = pHead1;
                        newhead = newhead->next;
                    }
                    pHead1 = pHead1->next;
                }
 
            }
            if (pHead1 == NULL)newhead->next = pHead2;
            else newhead->next = pHead1;
            return head;
        }  
    }
};

分析：（1）合并两个链表进行原地操作，两个指针即可

（2）对链表的性质不是很熟悉                                                                                                                                                                                   